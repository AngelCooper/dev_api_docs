HOST: http://api.gowatchit.com

--- GoWatchIt Developers API v2 ---
---
The API provides access to the GoWatchIt database of movies and
information about movie availabilities. Availibility information is available
for formats such as DVD rentals, online streaming, theaters, and outdoor screenings.
This API also provides links to watch, rent, or purchase movies online through
GoWatchIt's partners.

This API is new and currently supports the following features:

* Search by Movie Title

* Retreiving Availability Information.
    Availabilities are data sets describing which providers (e.g. Netflix) currently offer the movie, and in what formats (SD, HD, etc.). They also give a URL to each provider's version of the movie)

For access to this API, you'll need an API key, available from mailto:info@gowatchit.com.

All requests against the API must include an API key. You may include it either as a URL param, or in a request header as X-api-key. 

All results are returned in JSON format.

All Requests should be in the format /api/v2/ENDPOINT?apikey=bla&otherparams=BLA
---

--
Movies
The following resource deals with movie meta data and availability. The general usage is as follows:  
    
    /api/v2/movie/action/:optional-id.json

--
Get a list of featured content arranged by categories. The response movie data will reflect queue states for a logged in user.  
GET /api/v2/movies/categories
< 200
< Content-Type: application/json
{
    "categories": [
        {
          "title": "Currently Popular",
          "movies": [
              {
                "id": 266448,
                "synopsis": "This second gathering of childhood friends finds Lenny (Adam Sandler) moving his family back to the same small town where he grew up. Now, the grown ups (Sandler, Kevin James, Chris Rock, and David Spade) are the ones learning from their kids as the last day of school and its antics and surprises take center stage. Dennis Dugan returns to direct.",
                "title": "Grown Ups 2",
                "poster_url": "http://cdn.staging-gowatchit.com/posters/thumb/Grown-Ups-2-poster.jpg",
                "year": 2013,
                "genre": "Comedy",
                "duration": 0,
                "rate": "PG-13",
                "queue_count": 3445,
                "url": "/movies/grown-ups-2-266448",
                "provider_ids": [],
                "in_queue": false,
                "in_watched": false,
                "rating": 0,
                "review": ""
              },
              .... more movies 
          ]
        }    
    ]
}      

Get availabilities for a movie.  

GET /api/v2/movies/:id/availabilities 
< 200
< Content-Type: application/json
{
    "presale": null,
    "theaters": null,
    "onlines": [
        {
            "name": "iTunes",
            "logo": "http://s3.amazonaws.com/gowatchit-dev/providers/original/3_logo.png",
            "logos": {
                "light": "http://s3.amazonaws.com/gowatchit-dev/providers/original/3_logo.png",
                "dark": "http://s3.amazonaws.com/gowatchit-dev/providers/original/3_dark_logo.jpg"
            },
            "link": "http://itunes.apple.com/video/stonehenge-apocalypse/id405438653?uo=5&at=11l3Kx&ct=23",
            "watch_now": "/widget/movies/stonehenge-apocalypse-1/watch_now?availability=1542493&provider=3&provider_format=3",
            "format_line": "SD / LC",
            "buy_line": "Buy from $9.99",
            "rent_line": "Rent from $2.99",
            "provider_format_id": 3
        },
        ... more online availabilities
    ],
    "dvds": [
        {
            "name": "Netflix",
            "logo": "http://s3.amazonaws.com/gowatchit-dev/providers/original/1_logo.png",
            "logos": {
                "light": "http://s3.amazonaws.com/gowatchit-dev/providers/original/1_logo.png",
                "dark": "http://s3.amazonaws.com/gowatchit-dev/providers/original/1_dark_logo.png"
            },
            "link": "http://www.netflix.com/Movie/Stonehenge_Apocalypse/70153650",
            "watch_now": "/widget/movies/stonehenge-apocalypse-1/watch_now?availability=1127555&provider=1&provider_format=2",
            "format_line": "",
            "buy_line": "Free for Subscribers<br /><!--[if !IE]>--><span class=\"redLink\"><a href='https://www.netflix.com/Default?loms=abcd&fcld=true' class='redLink'>Join Now Â»</a></span><!--<![endif]-->",
            "rent_line": null,
            "provider_format_id": 2
        },
        ...more dvd availabilities
    ]
}
+++++
< 200
{
    "repsonse_type": "success",
    "status_code": 200,
    "message": "Movie has no availabilities"
}
+++++
< 404
< Content-Type: application/json
{
    "repsonse_type": "error",
    "status_code": 404,
    "message": "Movie ID not recognized"
}

--
Authentication
Authentication is handled by passing a token (or HTTP session cookie) back and forth. A token is returned in the response of either of the session create endpoints below. You must pass that token with the email address back for all auth required resoureces and endpoints. The token must be passed to server calls  as an SH1 hash digest of the returned auth token. 

It generally looks like this:  

    /api/v2/something?authentication_token={SH1_HASHED_AUTH_TOKEN}&email={email_address}

--
Sign-in using traditional username and password.

Required parameters:

* **email**  
* **password**

POST /api/v2/session/with_password
< 200
< Content-Type: application/json
{
    "display_name": "thisguy@gmail.com",
    "id": 70,
    "email": "thisguy@gmail.com",
    "avatar": null,
    "service_options": {
        "in_theaters": {
            "caption": "In Theaters",
            "provider_formats": [
                {
                    "id": 4,
                    "display_name": "Fandango",
                    "logo_url": "http://s3.amazonaws.com/gowatchit-dev/providers/original/4_logo.png"
                }
            ]
        },
        "dvd_bluray": {
            "caption": "DVD & Blu-ray",
            "provider_formats": [
                {
                    "id": 2,
                    "display_name": "Netflix",
                    "logo_url": "http://s3.amazonaws.com/gowatchit-dev/providers/original/1_logo.png"
                },
                {
                    "id": 9,
                    "display_name": "Redbox",
                    "logo_url": "http://s3.amazonaws.com/gowatchit-dev/providers/original/8_logo.png"
                }
            ]
        },
        "instant_providers": {
            "caption": "Online & On Demand",
            "provider_formats": [
                {
                    "id": 1,
                    "display_name": "Netflix",
                    "logo_url": "http://s3.amazonaws.com/gowatchit-dev/providers/original/1_logo.png"
                },
                {
                    "id": 3,
                    "display_name": "iTunes",
                    "logo_url": "http://s3.amazonaws.com/gowatchit-dev/providers/original/3_logo.png"
                },
                {
                    "id": 5,
                    "display_name": "VUDU",
                    "logo_url": "http://s3.amazonaws.com/gowatchit-dev/providers/original/7_logo.png"
                },
                {
                    "id": 7,
                    "display_name": "Amazon",
                    "logo_url": "http://s3.amazonaws.com/gowatchit-dev/providers/original/11_logo.png"
                },
                {
                    "id": 10,
                    "display_name": "Movies on Demand",
                    "logo_url": "http://s3.amazonaws.com/gowatchit-dev/providers/original/5_logo.png"
                },
                {
                    "id": 11,
                    "display_name": "SnagFilms",
                    "logo_url": "http://s3.amazonaws.com/gowatchit-dev/providers/original/12_logo.png"
                },
                {
                    "id": 12,
                    "display_name": "YouTube",
                    "logo_url": "http://s3.amazonaws.com/gowatchit-dev/providers/original/13_logo.png"
                },
                {
                    "id": 13,
                    "display_name": "Sundance Now",
                    "logo_url": "http://s3.amazonaws.com/gowatchit-dev/providers/original/14_logo.png"
                },
                {
                    "id": 14,
                    "display_name": "Hulu",
                    "logo_url": "http://s3.amazonaws.com/gowatchit-dev/providers/original/15_logo.png"
                },
                {
                    "id": 16,
                    "display_name": "Amazon",
                    "logo_url": "http://s3.amazonaws.com/gowatchit-dev/providers/original/pf_16_logo.png"
                }
            ]
        }
    },
    "full_name": "",
    "friends_count": "0",
    "authentication_token": "2zWgzpQFgpQQupsVSBjj",
    "has_facebook": false,
    "fb_post_preference": "ask",
    "fb_token": null
}
+++++
< 422  
< Content-Type: application/json
{
    "repsonse_type": "error",
    "status_code": 422,
    "message": "Wrong username or password"
}

Sign-in using Facebook.

Required parameters:

* **access_token** - Facebook access token. It is assumed this is gotten from the client side SDK, using the GWI facebook app id. 

POST /api/v2/session/with_fb
< 200
< Content-Type: application/json
{
    "display_name": "thisguy@gmail.com",
    "id": 70,
    "email": "thisguy@gmail.com",
    "avatar": null,
    "service_options": {
        "in_theaters": {
            "caption": "In Theaters",
            "provider_formats": [
                {
                    "id": 4,
                    "display_name": "Fandango",
                    "logo_url": "http://s3.amazonaws.com/gowatchit-dev/providers/original/4_logo.png"
                }
            ]
        },
        "dvd_bluray": {
            "caption": "DVD & Blu-ray",
            "provider_formats": [
                {
                    "id": 2,
                    "display_name": "Netflix",
                    "logo_url": "http://s3.amazonaws.com/gowatchit-dev/providers/original/1_logo.png"
                },
                {
                    "id": 9,
                    "display_name": "Redbox",
                    "logo_url": "http://s3.amazonaws.com/gowatchit-dev/providers/original/8_logo.png"
                }
            ]
        },
        "instant_providers": {
            "caption": "Online & On Demand",
            "provider_formats": [
                {
                    "id": 1,
                    "display_name": "Netflix",
                    "logo_url": "http://s3.amazonaws.com/gowatchit-dev/providers/original/1_logo.png"
                },
                {
                    "id": 3,
                    "display_name": "iTunes",
                    "logo_url": "http://s3.amazonaws.com/gowatchit-dev/providers/original/3_logo.png"
                },
                {
                    "id": 5,
                    "display_name": "VUDU",
                    "logo_url": "http://s3.amazonaws.com/gowatchit-dev/providers/original/7_logo.png"
                },
                {
                    "id": 7,
                    "display_name": "Amazon",
                    "logo_url": "http://s3.amazonaws.com/gowatchit-dev/providers/original/11_logo.png"
                },
                {
                    "id": 10,
                    "display_name": "Movies on Demand",
                    "logo_url": "http://s3.amazonaws.com/gowatchit-dev/providers/original/5_logo.png"
                },
                {
                    "id": 11,
                    "display_name": "SnagFilms",
                    "logo_url": "http://s3.amazonaws.com/gowatchit-dev/providers/original/12_logo.png"
                },
                {
                    "id": 12,
                    "display_name": "YouTube",
                    "logo_url": "http://s3.amazonaws.com/gowatchit-dev/providers/original/13_logo.png"
                },
                {
                    "id": 13,
                    "display_name": "Sundance Now",
                    "logo_url": "http://s3.amazonaws.com/gowatchit-dev/providers/original/14_logo.png"
                },
                {
                    "id": 14,
                    "display_name": "Hulu",
                    "logo_url": "http://s3.amazonaws.com/gowatchit-dev/providers/original/15_logo.png"
                },
                {
                    "id": 16,
                    "display_name": "Amazon",
                    "logo_url": "http://s3.amazonaws.com/gowatchit-dev/providers/original/pf_16_logo.png"
                }
            ]
        }
    },
    "full_name": "",
    "friends_count": "0",
    "authentication_token": "2zWgzpQFgpQQupsVSBjj",
    "has_facebook": false,
    "fb_post_preference": "ask",
    "fb_token": null
}
+++++
< 422  
{
    "repsonse_type": "error",
    "status_code": 422,
    "message": "Wrong username or password"
}

--
Users
The following resource deals with retrieving and updating user data. The general usage is as follows:  
    
    /api/v2/movie/user/ENDPOINT.json

--


Request a 'forgot password' email.  

Required parameters:

*  **email** - user's email

POST /api/v2/user/forgot_password
< 200
< Content-Type: application/json
{
    "repsonse_type": "success",
    "status_code": 200,
    "message": "Password instructions successfully sent"
}
+++++
< 422
< Content-Type: application/json
{   
    "response_type": "error",
    "status_code": 422,
    "message": "Email address not recognized"
}


Get movies in user's queue. Requires login. The response is paginated to inlcude 20 movies per page. 
The response can also be optionally filtered to include movies that are available instantly and in the specified provider-formats.

Pagination parameters:

* **offset** - offset from the beginning of the queue
* **page** - page number counting from the offset

Filter parameters (optional):

* **provider_format_ids** - a comma-separated list of provider-format IDs (from the GoWatchIt database)
* **instatntly_available** - when enabled (true), the response will only include titles that are available for instant streaming  


GET /api/v2/user/queue
offset=13&page=2
< 200
< Content-Type: application/json
{
    "movies": [
        {
            "id": 12910,
            "synopsis": "A group of former government assassins fights back against the CIA after they're targeted for knowing too much in this adaptation of Warren Ellis' acclaimed DC Comics graphic novels. Frank Moses (Bruce Willis) used to be a hired gun for the CIA. Along with Joe (Morgan Freeman), Marvin (John Malkovich), and Victoria (Helen Mirren), Frank's specialty was carrying out contracts that the government didn't want the public to know about. These days, Frank and his old gang are all retired, but the powers that be are still concerned that they know too much, and dispatch a team of top assassins to ensure their silence. Now, Frank and his former team members realize that their only hope for survival is to break into CIA headquarters and expose the truth. But once they're in, the group uncovers evidence of a massive cover-up that promises to rock the very foundation of our government. Karl Urban, Brian Cox, Richard Dreyfuss, and Ernest Borgnine co-star.",
            "title": "Red",
            "poster_url": "http://cdn.staging-gowatchit.com/posters/thumb/movie_12910.jpg",
            "year": 2010,
            "genre": "Action/Adventure",
            "duration": 111,
            "rate": "PG-13",
            "queue_count": 192,
            "url": "/movies/red-12910",
            "provider_ids": [
                1,
                3,
                7,
                11,
                17
            ],
            "in_queue": true,
            "in_watched": false,
            "rating": 4,
            "review": "not bad at all"
        },
        ... more movies
    ],
    "total_by_filter": 103,
    "total_queued": 103,
    "paging": {
        "current_offset": 33,
        "per_page": 20,
        "next_page": "/api/v2/user/queue?offset=53"
    }
}
+++++
< 401
< Content-Type: application/json
{
    "repsonse_type": "error",
    "status_code": 401,
    "message": "Login required"
}



Add a movie to a user's queue. Requires login.

Required parameters:

* **movie_id** - the GoWatchIt movie id

POST /api/v2/user/queue
< 200
< Content-Type: application/json
{
    "response_type": "success",
    "status_code": 200,
    "message": "Stonehenge Apocalypse successfully queued"
}
+++++
< 401
< Content-Type: application/json
{
    "repsonse_type": "error",
    "status_code": 404,
    "message": "Movie ID not recognized"
}

Delete a movie from user's queue. Required login. 

Required parameters:

* **movie_id** - the GoWatchIt movie id

DELETE /api/v2/user/queue
< 200
< Content-Type: application/json
{
    "response_type": "success",
    "status_code": 200,
    "message": "Stonehenge Apocalypse deleted from queue"
}
+++++
< 401
< Content-Type: application/json
{
    "repsonse_type": "error",
    "status_code": 404,
    "message": "Movie is not in user's queue"
}

--
Quick Alerts
The following resource allows a user to get a quick alert for a specific movie with only an email address.

An account is not required. If a user does have an account the system will elegantly handle by adding to the move to that user's queue:  
    
    /api/v2/quickalerts/ENDPOINT.json

--


Create a quick alert.  

Required parameters:

*  **email** - user's email
*  **movieId** the GoWatchIt movieId that the user wants to use. 

A user will be sent a confirmation email. The response will include an upgrade URL, which can be displayed to the user if relevant.  

POST /api/v2/quickalerts
< 200
< Content-Type: application/json
{
    "upgrade_path": "http://gowatchit.com/quick_alerts/upgrade/blablabla"
}
+++++
< 422
< Content-Type: application/json
{   
    "message": "Email address not valid"
}